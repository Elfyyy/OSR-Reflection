
function TReflectionGametab.Current: Integer;
var
  TempWidget: TReflectWidget;
  Containers, Children, Gametabs: TIntegerArray;
  I: Integer;
begin
  Containers := [Widget_ClanChat_Container, Widget_FriendsList_Container,
    Widget_IgnoreList_Container, Widget_Logout_Container,
    Widget_ChangeWorld_Container, Widget_Options_Container,
    Widget_Emotes_Container, Widget_MusicPlayer_Container,
    Widget_CombatOptions_Container, Widget_Stats_Container,
    Widget_QuestList_Container, Widget_Achievement_Container,
    Widget_Minigame_Container, Widget_KourendFavour_Container,
    Widget_WornEquipment_Container, Widget_Prayer_Container,
    Widget_Magic_Container, Widget_Inventory_Container];
  Children := [Widget_ClanChat_Detect_Child, Widget_FriendsList_Detect_Child,
    Widget_IgnoreList_Detect_Child, Widget_Logout_Detect_Child,
    Widget_ChangeWorld_Detect_Child, Widget_Options_Detect_Child,
    Widget_Emotes_Detect_Child, Widget_MusicPlayer_Detect_Child,
    Widget_CombatOptions_Detect_Child, Widget_Stats_Detect_Child,
    Widget_QuestList_Detect_Child, Widget_Achievement_Detect_Child,
    Widget_Minigame_Detect_Child, Widget_KourendFavour_Detect_Child,
    Widget_WornEquipment_Detect_Child, Widget_Prayer_Detect_Child,
    Widget_Magic_Detect_Child, Widget_Inventory_Detect_Child];
  Gametabs := [Gametab_ClanChat, Gametab_FriendsList, Gametab_IgnoreList,
    Gametab_Logout, Gametab_Logout, Gametab_Options, Gametab_Emotes,
    Gametab_MusicPlayer, Gametab_CombatOptions, Gametab_Stats, Gametab_QuestList,
    Gametab_QuestList, Gametab_QuestList, Gametab_QuestList,
    Gametab_WornEquipment, Gametab_Prayer, Gametab_Magic, Gametab_Inventory];

  for I := 0 to High(Gametabs) do
  begin
    TempWidget.GetWidget(Containers[I], Children[I]);
    if not (TempWidget.IsHidden) and (TempWidget.GetBounds.X1 <> -1) then
    begin
      TempWidget.Free;
      Exit(Gametabs[I]);
    end;
    TempWidget.Free;
  end;

  If Reflect.Bank.IsOpen then
    Exit(Gametab_Inventory);

  Result := -1;
end;

function TReflectionGametab.Open(TabNum: Integer): Boolean;
var
  TabWidget: TReflectWidget;
  Tries: Integer;
  T: TReflectTimer;
begin
  if Reflect.Gametab.Current = TabNum then
    Exit(True);
  TabWidget.GetWidget(Widget_Gametab_Container, TabNum);
  if Not TabWidget.IsHidden then
  begin
    Tries := 0;
    while (Tries < 3) and (not Result) do
    begin
      TabWidget.Interact(3);
      T.Start;
      while (T.elapsedTime < 2000) and (not Result) do
      begin
        Result := (Reflect.Gametab.Current = TabNum);
        Wait(100 + Random(100));
      end;
      Inc(Tries);
    end;
    if (Result) then
      Wait(250 + Random(300));
  end;
  TabWidget.Free;
end;

function TReflectionGametab.FTab(Tab: Integer): Boolean;
var
  T : TReflectTimer;
  F : Integer;
begin
  if not InRange(Tab, Gametab_ClanChat, Gametab_Prayer) then
  begin
    Reflect.Logger.Warn('FTab ' + IntToStr(Tab) + ' is not a valid tab number.');
    Exit(False);
  end;
  if Tab = Gametab_Logout then
  begin
    Reflect.Logger.Warn('FTab ' + ToStr(Tab) + ' is not a valid tab number.');
    Exit(False);
  end;
  if Reflect.Gametab.Current = Tab then
    Exit(True);
  case Tab of
    Gametab_CombatOptions : F := 1;
    Gametab_Stats         : F := 2;
    Gametab_QuestList     : F := 3;
    Gametab_Inventory     : F := -84;
    Gametab_WornEquipment : F := 4;
    Gametab_Prayer        : F := 5;
    Gametab_Magic         : F := 6;
    Gametab_ClanChat      : F := 7;
    Gametab_FriendsList   : F := 8;
    Gametab_IgnoreList    : F := 9;
    Gametab_Options       : F := 10;
    Gametab_Emotes        : F := 11;
    Gametab_MusicPlayer   : F := 12;
  end;
  T.start;
  repeat
    Reflect.Keyboard.TypeKey(111 + F);
    Wait(150+random(100));
    Result := Reflect.Gametab.Current = Tab;
  until Result or (T.ElapsedTime > 1000);

  if not Result then
    Result := Reflect.Gametab.Open(Tab);
end;

procedure TReflectionGametab.ClickNorth;
var
  W : TReflectWidget;
begin
  W.GetWidget(Widget_Gametab_Container, Widget_Gametab_LookNorth_Child);
  if W.NotNull then
  begin
    W.Interact;
    W.Free;
  end;
end;

